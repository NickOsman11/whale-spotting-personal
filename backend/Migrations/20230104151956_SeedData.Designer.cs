// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WhaleSpotting;

#nullable disable

namespace WhaleSpotting.Migrations
{
    [DbContext(typeof(WhaleSpottingDbContext))]
    [Migration("20230104151956_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LocationSpecies", b =>
                {
                    b.Property<int>("LocationsId")
                        .HasColumnType("integer");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("integer");

                    b.HasKey("LocationsId", "SpeciesId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("LocationSpecies");
                });

            modelBuilder.Entity("WhaleSpotting.Models.Database.ConservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConservationStatuses");
                });

            modelBuilder.Entity("WhaleSpotting.Models.Database.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Norwegian Sea"
                        });
                });

            modelBuilder.Entity("WhaleSpotting.Models.Database.Sighting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConfirmationStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("SeenBy")
                        .HasColumnType("text");

                    b.Property<DateOnly>("SeenOn")
                        .HasColumnType("date");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("integer");

                    b.Property<int>("WhaleCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Sightings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmationStatus = 2,
                            Description = "Wow!",
                            ImageUrl = "https://i.guim.co.uk/img/media/9b91662f6485bbc457740c71777f5156ae9f7511/0_55_3500_2101/master/3500.jpg?width=620&quality=45&dpr=2&s=none",
                            Latitude = 64.35f,
                            LocationId = 1,
                            Longitude = 3.38f,
                            SeenBy = "Johnny Fakeson",
                            SeenOn = new DateOnly(2023, 1, 2),
                            SpeciesId = 1,
                            WhaleCount = 2
                        });
                });

            modelBuilder.Entity("WhaleSpotting.Models.Database.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConservationStatusId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("ScientificName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ConservationStatusId");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The humpback whale is a species of baleen whale. It is a rorqual and is the only species in the genus Megaptera. Adults range in length from 14–17 m and weigh up to 40 metric tons. The humpback has a distinctive body shape, with long pectoral fins and tubercles on its head.",
                            Name = "Humpback Whale",
                            PhotoUrl = "https://images.immediate.co.uk/production/volatile/sites/23/2019/10/GettyImages-1164887104_Craig-Lambert-2faf563.jpg?quality=90&webp=true&resize=1000,667",
                            ScientificName = "Megaptera novaeangliae"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The blue whale is a marine mammal and a baleen whale. Reaching a maximum confirmed length of 29.9 meters and weighing up to 199 tonnes, it is the largest animal known to have ever existed. The blue whale's long and slender body can be of various shades of greyish-blue dorsally and somewhat lighter underneath.",
                            Name = "Blue Whale",
                            PhotoUrl = "https://newsroom.unsw.edu.au/sites/default/files/styles/full_width__2x/public/thumbnails/image/pygmy_blue_whale_swimming_underwater_3.jpg?itok=NxFYiUIS",
                            ScientificName = "Balaenoptera musculus"
                        });
                });

            modelBuilder.Entity("WhaleSpotting.Models.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("bytea");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LocationSpecies", b =>
                {
                    b.HasOne("WhaleSpotting.Models.Database.Location", null)
                        .WithMany()
                        .HasForeignKey("LocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhaleSpotting.Models.Database.Species", null)
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WhaleSpotting.Models.Database.Sighting", b =>
                {
                    b.HasOne("WhaleSpotting.Models.Database.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("WhaleSpotting.Models.Database.Species", "Species")
                        .WithMany()
                        .HasForeignKey("SpeciesId");

                    b.Navigation("Location");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("WhaleSpotting.Models.Database.Species", b =>
                {
                    b.HasOne("WhaleSpotting.Models.Database.ConservationStatus", "ConservationStatus")
                        .WithMany()
                        .HasForeignKey("ConservationStatusId");

                    b.Navigation("ConservationStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
